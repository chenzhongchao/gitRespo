<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="store.ifresh.os.fitness.dao.MemberThirdpartyMapper" >
  <resultMap id="MemberThirdpartyMap" type="store.ifresh.os.fitness.model.entity.MemberThirdparty" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="thirdparty_id" property="thirdpartyId" jdbcType="SMALLINT" />
    <result column="unionid" property="unionid" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List" >
    id, 
    create_time, 
    update_time, 
    member_id, 
    thirdparty_id, 
    unionid
  </sql>
  
  <sql id="Insert_Column_List" > 
    member_id, 
    thirdparty_id, 
    unionid
  </sql>
  
 <sql id="Where_Clause" > 
      <if test="record.id != null" >
        and id = #{record.id,jdbcType=INTEGER}
      </if>
      <if test="record.createTime != null" >
        and create_time = #{record.createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="record.updateTime != null" >
        and update_time = #{record.updateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="record.memberId != null" >
        and member_id = #{record.memberId,jdbcType=INTEGER}
      </if>
      <if test="record.thirdpartyId != null" >
        and thirdparty_id = #{record.thirdpartyId,jdbcType=SMALLINT}
      </if>
      <if test="record.unionid != null" >
        and unionid = #{record.unionid,jdbcType=VARCHAR}
      </if>
  </sql>
  
  <select id="selectByExample" resultMap="MemberThirdpartyMap" parameterType="store.ifresh.os.fitness.model.entity.MemberThirdpartyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fit_member_thirdparty
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectByPrimaryKey" resultMap="MemberThirdpartyMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from fit_member_thirdparty
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from fit_member_thirdparty
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteByExample" parameterType="store.ifresh.os.fitness.model.entity.MemberThirdpartyExample" >
    delete from fit_member_thirdparty
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="store.ifresh.os.fitness.model.entity.MemberThirdparty" >
    insert into fit_member_thirdparty 
    (
    	id, 
    	create_time, 
    	update_time, 
      	member_id, 
      	thirdparty_id, 
      	unionid
    )
    values
    (
    	#{id,jdbcType=INTEGER}, 
    	#{createTime,jdbcType=TIMESTAMP}, 
    	#{updateTime,jdbcType=TIMESTAMP}, 
      	#{memberId,jdbcType=INTEGER}, 
      	#{thirdpartyId,jdbcType=SMALLINT}, 
      	#{unionid,jdbcType=VARCHAR}
     )
  </insert>
  
  <insert id="insertMemberThirdparty" parameterType="store.ifresh.os.fitness.model.entity.MemberThirdparty" >
  	insert into fit_member_thirdparty (<include refid="Insert_Column_List" />) 
  	values ( 
      	#{memberId,jdbcType=INTEGER,typeHandler=store.ifresh.os.fitness.framework.typehandler.IntegerNullTypeHandler}, 
      	#{thirdpartyId,jdbcType=SMALLINT,typeHandler=store.ifresh.os.fitness.framework.typehandler.IntegerNullTypeHandler}, 
      	#{unionid,jdbcType=VARCHAR,typeHandler=store.ifresh.os.fitness.framework.typehandler.StringNullTypeHandler}
  	)
  </insert>
  
  <insert id="insertSelective" parameterType="store.ifresh.os.fitness.model.entity.MemberThirdparty" >
    insert into fit_member_thirdparty
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="thirdpartyId != null" >
        thirdparty_id,
      </if>
      <if test="unionid != null" >
        unionid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="thirdpartyId != null" >
        #{thirdpartyId,jdbcType=SMALLINT},
      </if>
      <if test="unionid != null" >
        #{unionid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <select id="countByExample" parameterType="store.ifresh.os.fitness.model.entity.MemberThirdpartyExample" resultType="java.lang.Integer" >
    select count(*) from fit_member_thirdparty
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExampleSelective" parameterType="map" >
    update fit_member_thirdparty
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.memberId != null" >
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.thirdpartyId != null" >
        thirdparty_id = #{record.thirdpartyId,jdbcType=SMALLINT},
      </if>
      <if test="record.unionid != null" >
        unionid = #{record.unionid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByExample" parameterType="map" >
    update fit_member_thirdparty
    set 
    	id = #{record.id,jdbcType=INTEGER},
      	create_time = #{record.createTime,jdbcType=TIMESTAMP},
      	update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      	member_id = #{record.memberId,jdbcType=INTEGER},
      	thirdparty_id = #{record.thirdpartyId,jdbcType=SMALLINT},
      	unionid = #{record.unionid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByPrimaryKeySelective" parameterType="store.ifresh.os.fitness.model.entity.MemberThirdparty" >
    update fit_member_thirdparty
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="thirdpartyId != null" >
        thirdparty_id = #{thirdpartyId,jdbcType=SMALLINT},
      </if>
      <if test="unionid != null" >
        unionid = #{unionid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="store.ifresh.os.fitness.model.entity.MemberThirdparty" >
    update fit_member_thirdparty
    set 
    	create_time = #{createTime,jdbcType=TIMESTAMP},
    	update_time = #{updateTime,jdbcType=TIMESTAMP},
      	member_id = #{memberId,jdbcType=INTEGER},
      	thirdparty_id = #{thirdpartyId,jdbcType=SMALLINT},
      	unionid = #{unionid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByMemberThirdpartySelective" resultMap="MemberThirdpartyMap" parameterType="store.ifresh.os.fitness.model.entity.MemberThirdparty">
	    select
	    <include refid="Base_Column_List" />
	    from fit_member_thirdparty
	    <where>
		    <if test="_parameter != null" >
				<include refid="Where_Clause" />
			</if>
	    </where>
  </select>
</mapper>